import telebot
from telebot.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from random import choice, randint
import time

TOKEN = '6772245164:AAHWMbrqNZl05vT_r9JUWRtIwJCHX3-0Phs'

BOT = telebot.TeleBot(token = TOKEN)



with open('C:/Users/–°–∞–º–∏—Ä/.vscode/Lessons/Lesson 54/cats.txt', 'r', encoding='utf-8') as file:
    cats = [line.strip('\n') for line in file]

with open('C:/Users/–°–∞–º–∏—Ä/.vscode/Lessons/Lesson 54/dogs.txt', 'r', encoding='utf-8') as file:
    dogs = [line.strip('\n') for line in file]

@BOT.message_handler(commands=['start'])
def welcome(message:Message):
    BOT.reply_to(message,
                 '–ü—Ä–∏–≤–µ—Ç! –ö–æ–≥–æ —Ç—ã –ª—é–±–∏—à—å: –∫–æ—à–µ–∫ –∏–ª–∏ —Å–æ–±–∞–∫? –ù–∞–∂–º–∏ –Ω–∞ /mood \n/play \n/buttons \n/secundamer')

@BOT.message_handler(commands=['play'])
def play(message : Message):
    markup = InlineKeyboardMarkup(row_width=1)
    stone = InlineKeyboardButton('ü™®', callback_data='stone')
    scissors = InlineKeyboardButton('‚úÇÔ∏è', callback_data = 'scissors')
    paper = InlineKeyboardButton('üìú', callback_data = 'paper')
    markup.add(stone, scissors, paper)
    BOT.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ \n–í—ã–±–∏—Ä–∞–π, —á–µ–º –±—É–¥–µ—à—å —Ö–æ–¥–∏—Ç—å',
                     reply_markup=markup)
    print(message.chat.id)
    
@BOT.message_handler(commands=['mood'])
def mood(message : Message):
    Keyboard = ReplyKeyboardMarkup()
    button1 = KeyboardButton('üòÆ')
    button2 = KeyboardButton('üòâ')
    button3 = KeyboardButton('üôÇ')
    button4 = KeyboardButton('üò¢')
    button5 = KeyboardButton('ü§Ø')
    button6 = KeyboardButton('ü§°')
    button7 = KeyboardButton('üòµ‚Äçüí´')
    button8 = KeyboardButton('ü§™')
    button9 = KeyboardButton('üòõ')
    Keyboard.add(button1,button2,button3,button4,button5,button6,button7,button8,button9)

    BOT.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–º–∞–π–ª', reply_markup=Keyboard)

@BOT.message_handler(commands=['secundamer'])
def secundamer(message : Message):
    BOT.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ –∫–∞–∫–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Ä–µ–º—è, –æ—Ç–ø—Ä–∞–≤—å –≤—Ä–µ–º—è –≤ –≤–∏–¥–µ:"–ì–ì–ì–ì-–ú–ú-–ì–ì –ß–ß:–ú–ú:–°–°"')

@BOT.message_handler(func = lambda message : True)
def secss(message : Message):
    timme = message.text.strip()
    result = time.strptime(timme, "")

@BOT.message_handler(commands=['buttons'])
def button(message : Message):
    markup = InlineKeyboardMarkup(row_width=1)
    cats = InlineKeyboardButton('üê±', callback_data = 'cats')
    dogs = InlineKeyboardButton('üê∂', callback_data = 'dogs')
    markup.add(cats, dogs)
    BOT.send_message(message.chat.id, '–ö–æ—à–∫–∏ –∏–ª–∏ —Å–æ–±–∞—á–∫–∏?',
                     reply_markup=markup)
    print(message.chat.id)
    
@BOT.callback_query_handler(func = lambda call : True)
def callback(call : Message):
    if call is not None:
        if call.data == 'cats':
            BOT.send_message(call.message.chat.id, choice(cats))
        if call.data == 'dogs':
            BOT.send_message(call.message.chat.id, choice(dogs))

        mode_n = randint(1,3)

        if call.data == 'stone':
            if mode_n == 1:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å! \n–ù–∏—á—å—è!')
            elif mode_n == 2:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã! \n–¢—ã –ø–æ–±–µ–¥–∏–ª!')
            else:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É! \n–Ø –ø–æ–±–µ–¥–∏–ª!')
        if call.data == 'scissors':
            if mode_n == 1:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å! \n–Ø –ø–æ–±–µ–¥–∏–ª!')
            elif mode_n == 2:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã! \n–ù–∏—á—å—è!')
            else:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É! \n–¢—ã –ø–æ–±–µ–¥–∏–ª!')
        if call.data == 'paper':
            if mode_n == 1:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å! \n–¢—ã –ø–æ–±–µ–¥–∏–ª!')
            elif mode_n == 2:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã! \n–Ø –ø–æ–±–µ–¥–∏–ª!')
            else:
                BOT.send_message(call.message.chat.id, '–Ø –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É! \n–ù–∏—á—å—è!')


BOT.polling()